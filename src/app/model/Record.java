package app.model;


// Generated 31 mars 2012 16:09:28 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Record generated by hbm2java
 */
@Entity
@Table(name = "record", catalog = "hibernate")
public class Record implements java.io.Serializable {

	private String matrixnumber;
	private Artist artistByProducer;
	private Artist artistByArtist;
	private String title;
	private String pressinfo;
	private Integer numdisk;
	private String type;
	private Set<Soundtrack> soundtracks = new HashSet<Soundtrack>(0);
	private Set<Evaluation> evaluations = new HashSet<Evaluation>(0);
	private Set<Updatehistory> updatehistories = new HashSet<Updatehistory>(0);
	private Set<AuthenticatedUser> authenticatedUsers = new HashSet<AuthenticatedUser>(
			0);
	private Set<Playlist> playlists = new HashSet<Playlist>(0);
	private Set<OwnRecord> ownRecords = new HashSet<OwnRecord>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Record() {
	}

	public Record(String matrixnumber, Artist artistByProducer,
			Artist artistByArtist, String title, String pressinfo, String type) {
		this.matrixnumber = matrixnumber;
		this.artistByProducer = artistByProducer;
		this.artistByArtist = artistByArtist;
		this.title = title;
		this.pressinfo = pressinfo;
		this.type = type;
	}

	public Record(String matrixnumber, Artist artistByProducer,
			Artist artistByArtist, String title, String pressinfo,
			Integer numdisk, String type, Set<Soundtrack> soundtracks,
			Set<Evaluation> evaluations, Set<Updatehistory> updatehistories,
			Set<AuthenticatedUser> authenticatedUsers, Set<Playlist> playlists,
			Set<OwnRecord> ownRecords, Set<Comment> comments) {
		this.matrixnumber = matrixnumber;
		this.artistByProducer = artistByProducer;
		this.artistByArtist = artistByArtist;
		this.title = title;
		this.pressinfo = pressinfo;
		this.numdisk = numdisk;
		this.type = type;
		this.soundtracks = soundtracks;
		this.evaluations = evaluations;
		this.updatehistories = updatehistories;
		this.authenticatedUsers = authenticatedUsers;
		this.playlists = playlists;
		this.ownRecords = ownRecords;
		this.comments = comments;
	}

	@Id
	@Column(name = "matrixnumber", unique = true, nullable = false, length = 20)
	public String getMatrixnumber() {
		return this.matrixnumber;
	}

	public void setMatrixnumber(String matrixnumber) {
		this.matrixnumber = matrixnumber;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "producer", nullable = false)
	public Artist getArtistByProducer() {
		return this.artistByProducer;
	}

	public void setArtistByProducer(Artist artistByProducer) {
		this.artistByProducer = artistByProducer;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "artist", nullable = false)
	public Artist getArtistByArtist() {
		return this.artistByArtist;
	}

	public void setArtistByArtist(Artist artistByArtist) {
		this.artistByArtist = artistByArtist;
	}

	@Column(name = "title", nullable = false, length = 50)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "pressinfo", nullable = false, length = 50)
	public String getPressinfo() {
		return this.pressinfo;
	}

	public void setPressinfo(String pressinfo) {
		this.pressinfo = pressinfo;
	}

	@Column(name = "numdisk")
	public Integer getNumdisk() {
		return this.numdisk;
	}

	public void setNumdisk(Integer numdisk) {
		this.numdisk = numdisk;
	}

	@Column(name = "type", nullable = false, length = 20)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "record_soundtrack", catalog = "hibernate", joinColumns = { @JoinColumn(name = "id_record", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "id_soundtrack", nullable = false, updatable = false) })
	public Set<Soundtrack> getSoundtracks() {
		return this.soundtracks;
	}

	public void setSoundtracks(Set<Soundtrack> soundtracks) {
		this.soundtracks = soundtracks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "record")
	public Set<Evaluation> getEvaluations() {
		return this.evaluations;
	}

	public void setEvaluations(Set<Evaluation> evaluations) {
		this.evaluations = evaluations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "record")
	public Set<Updatehistory> getUpdatehistories() {
		return this.updatehistories;
	}

	public void setUpdatehistories(Set<Updatehistory> updatehistories) {
		this.updatehistories = updatehistories;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "tracked_records", catalog = "hibernate", joinColumns = { @JoinColumn(name = "id_record", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "id_user", nullable = false, updatable = false) })
	public Set<AuthenticatedUser> getAuthenticatedUsers() {
		return this.authenticatedUsers;
	}

	public void setAuthenticatedUsers(Set<AuthenticatedUser> authenticatedUsers) {
		this.authenticatedUsers = authenticatedUsers;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "records")
	public Set<Playlist> getPlaylists() {
		return this.playlists;
	}

	public void setPlaylists(Set<Playlist> playlists) {
		this.playlists = playlists;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "record")
	public Set<OwnRecord> getOwnRecords() {
		return this.ownRecords;
	}

	public void setOwnRecords(Set<OwnRecord> ownRecords) {
		this.ownRecords = ownRecords;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "record")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

}
