package Modele;

// Generated 26 mars 2012 22:26:29 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Soundtrack generated by hbm2java
 */
@Entity
@Table(name = "soundtrack", catalog = "hibernate")
public class Soundtrack implements java.io.Serializable {

	private Integer id;
	private Artist artistByMusicWriter;
	private Artist artistByAudioEngineer;
	private Artist artistBySinger;
	private Artist artistByLyricsWriter;
	private String title;
	private String rythm;
	private String linkTo;
	private String label;
	private String playingtime;
	private Date releasedate;
	private String style;
	private Set<Record> records = new HashSet<Record>(0);
	private Set<Artist> artists = new HashSet<Artist>(0);
	private Set<Artist> artists_1 = new HashSet<Artist>(0);

	public Soundtrack() {
	}

	public Soundtrack(Artist artistBySinger, String title) {
		this.artistBySinger = artistBySinger;
		this.title = title;
	}

	public Soundtrack(Artist artistByMusicWriter, Artist artistByAudioEngineer,
			Artist artistBySinger, Artist artistByLyricsWriter, String title,
			String rythm, String linkTo, String label, String playingtime,
			Date releasedate, String style, Set<Record> records,
			Set<Artist> artists, Set<Artist> artists_1) {
		this.artistByMusicWriter = artistByMusicWriter;
		this.artistByAudioEngineer = artistByAudioEngineer;
		this.artistBySinger = artistBySinger;
		this.artistByLyricsWriter = artistByLyricsWriter;
		this.title = title;
		this.rythm = rythm;
		this.linkTo = linkTo;
		this.label = label;
		this.playingtime = playingtime;
		this.releasedate = releasedate;
		this.style = style;
		this.records = records;
		this.artists = artists;
		this.artists_1 = artists_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "music_writer")
	public Artist getArtistByMusicWriter() {
		return this.artistByMusicWriter;
	}

	public void setArtistByMusicWriter(Artist artistByMusicWriter) {
		this.artistByMusicWriter = artistByMusicWriter;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "audio_engineer")
	public Artist getArtistByAudioEngineer() {
		return this.artistByAudioEngineer;
	}

	public void setArtistByAudioEngineer(Artist artistByAudioEngineer) {
		this.artistByAudioEngineer = artistByAudioEngineer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "singer", nullable = false)
	public Artist getArtistBySinger() {
		return this.artistBySinger;
	}

	public void setArtistBySinger(Artist artistBySinger) {
		this.artistBySinger = artistBySinger;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lyrics_writer")
	public Artist getArtistByLyricsWriter() {
		return this.artistByLyricsWriter;
	}

	public void setArtistByLyricsWriter(Artist artistByLyricsWriter) {
		this.artistByLyricsWriter = artistByLyricsWriter;
	}

	@Column(name = "title", nullable = false, length = 50)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "rythm", length = 20)
	public String getRythm() {
		return this.rythm;
	}

	public void setRythm(String rythm) {
		this.rythm = rythm;
	}

	@Column(name = "link_to", length = 30)
	public String getLinkTo() {
		return this.linkTo;
	}

	public void setLinkTo(String linkTo) {
		this.linkTo = linkTo;
	}

	@Column(name = "label", length = 20)
	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	@Column(name = "playingtime", length = 20)
	public String getPlayingtime() {
		return this.playingtime;
	}

	public void setPlayingtime(String playingtime) {
		this.playingtime = playingtime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "releasedate", length = 10)
	public Date getReleasedate() {
		return this.releasedate;
	}

	public void setReleasedate(Date releasedate) {
		this.releasedate = releasedate;
	}

	@Column(name = "style", length = 20)
	public String getStyle() {
		return this.style;
	}

	public void setStyle(String style) {
		this.style = style;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "record_soundtrack", catalog = "hibernate", joinColumns = { @JoinColumn(name = "id_soundtrack", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "id_record", nullable = false, updatable = false) })
	public Set<Record> getRecords() {
		return this.records;
	}

	public void setRecords(Set<Record> records) {
		this.records = records;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "music_players", catalog = "hibernate", joinColumns = { @JoinColumn(name = "id_soundtrack", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "id_artist", nullable = false, updatable = false) })
	public Set<Artist> getArtists() {
		return this.artists;
	}

	public void setArtists(Set<Artist> artists) {
		this.artists = artists;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "invited_artists", catalog = "hibernate", joinColumns = { @JoinColumn(name = "id_soundtrack", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "id_artist", nullable = false, updatable = false) })
	public Set<Artist> getArtists_1() {
		return this.artists_1;
	}

	public void setArtists_1(Set<Artist> artists_1) {
		this.artists_1 = artists_1;
	}

}
