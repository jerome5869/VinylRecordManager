package Modele;

// Generated 26 mars 2012 22:26:29 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * OwnRecord generated by hbm2java
 */
@Entity
@Table(name = "own_record", catalog = "hibernate")
public class OwnRecord implements java.io.Serializable {

	private OwnRecordId id;
	private AuthenticatedUser authenticatedUser;
	private Record record;
	private String digitalVersion;
	private String condition;
	private Set<FieldOwnedRecords> fieldOwnedRecordses = new HashSet<FieldOwnedRecords>(
			0);

	public OwnRecord() {
	}

	public OwnRecord(OwnRecordId id, AuthenticatedUser authenticatedUser,
			Record record) {
		this.id = id;
		this.authenticatedUser = authenticatedUser;
		this.record = record;
	}

	public OwnRecord(OwnRecordId id, AuthenticatedUser authenticatedUser,
			Record record, String digitalVersion, String condition,
			Set<FieldOwnedRecords> fieldOwnedRecordses) {
		this.id = id;
		this.authenticatedUser = authenticatedUser;
		this.record = record;
		this.digitalVersion = digitalVersion;
		this.condition = condition;
		this.fieldOwnedRecordses = fieldOwnedRecordses;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idUser", column = @Column(name = "id_user", nullable = false, length = 12)),
			@AttributeOverride(name = "idRecord", column = @Column(name = "id_record", nullable = false, length = 20)) })
	public OwnRecordId getId() {
		return this.id;
	}

	public void setId(OwnRecordId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_user", nullable = false, insertable = false, updatable = false)
	public AuthenticatedUser getAuthenticatedUser() {
		return this.authenticatedUser;
	}

	public void setAuthenticatedUser(AuthenticatedUser authenticatedUser) {
		this.authenticatedUser = authenticatedUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_record", nullable = false, insertable = false, updatable = false)
	public Record getRecord() {
		return this.record;
	}

	public void setRecord(Record record) {
		this.record = record;
	}

	@Column(name = "digital_version", length = 12)
	public String getDigitalVersion() {
		return this.digitalVersion;
	}

	public void setDigitalVersion(String digitalVersion) {
		this.digitalVersion = digitalVersion;
	}

	@Column(name = "condition", length = 12)
	public String getCondition() {
		return this.condition;
	}

	public void setCondition(String condition) {
		this.condition = condition;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ownRecord")
	public Set<FieldOwnedRecords> getFieldOwnedRecordses() {
		return this.fieldOwnedRecordses;
	}

	public void setFieldOwnedRecordses(
			Set<FieldOwnedRecords> fieldOwnedRecordses) {
		this.fieldOwnedRecordses = fieldOwnedRecordses;
	}

}
