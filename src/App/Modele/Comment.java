package App.Modele;

// Generated 31 mars 2012 16:09:28 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name = "comment", catalog = "hibernate")
public class Comment implements java.io.Serializable {

	private CommentId id;
	private AuthenticatedUser authenticatedUser;
	private Record record;
	private String text;

	public Comment() {
	}

	public Comment(CommentId id, AuthenticatedUser authenticatedUser,
			Record record, String text) {
		this.id = id;
		this.authenticatedUser = authenticatedUser;
		this.record = record;
		this.text = text;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "username", column = @Column(name = "username", nullable = false, length = 12)),
			@AttributeOverride(name = "recordnumber", column = @Column(name = "recordnumber", nullable = false, length = 20)) })
	public CommentId getId() {
		return this.id;
	}

	public void setId(CommentId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "username", nullable = false, insertable = false, updatable = false)
	public AuthenticatedUser getAuthenticatedUser() {
		return this.authenticatedUser;
	}

	public void setAuthenticatedUser(AuthenticatedUser authenticatedUser) {
		this.authenticatedUser = authenticatedUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "recordnumber", nullable = false, insertable = false, updatable = false)
	public Record getRecord() {
		return this.record;
	}

	public void setRecord(Record record) {
		this.record = record;
	}

	@Column(name = "text", nullable = false, length = 100)
	public String getText() {
		return this.text;
	}

	public void setText(String text) {
		this.text = text;
	}

}
